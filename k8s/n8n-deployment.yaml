apiVersion: v1
kind: Namespace
metadata:
  name: n8n
  labels:
    app.kubernetes.io/name: n8n
    app.kubernetes.io/part-of: flow
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: n8n-config
  namespace: n8n
data:
  DB_TYPE: "postgresdb"
  N8N_HOST: "0.0.0.0"
  N8N_PORT: "5678"
  N8N_PROTOCOL: "http"
  GENERIC_TIMEZONE: "UTC"
  N8N_METRICS: "true"
  N8N_LOG_LEVEL: "info"
  N8N_LOG_OUTPUT: "console"
---
apiVersion: v1
kind: Secret
metadata:
  name: n8n-secrets
  namespace: n8n
type: Opaque
data:
  # Base64 encoded values - update these with real values
  DB_POSTGRESDB_PASSWORD: bjhuX3Bhc3N3b3Jk  # n8n_password
  N8N_BASIC_AUTH_USER: YWRtaW4=              # admin
  N8N_BASIC_AUTH_PASSWORD: YWRtaW4=          # admin
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: n8n
  labels:
    app.kubernetes.io/name: n8n
    app.kubernetes.io/component: workflow-engine
    app.kubernetes.io/part-of: flow
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: n8n
  template:
    metadata:
      labels:
        app.kubernetes.io/name: n8n
        app.kubernetes.io/component: workflow-engine
        app.kubernetes.io/part-of: flow
    spec:
      containers:
      - name: n8n
        image: n8nio/n8n:latest
        ports:
        - containerPort: 5678
          name: http
        envFrom:
        - configMapRef:
            name: n8n-config
        env:
        - name: DB_POSTGRESDB_HOST
          value: "postgres-service"
        - name: DB_POSTGRESDB_PORT
          value: "5432"
        - name: DB_POSTGRESDB_DATABASE
          value: "n8n"
        - name: DB_POSTGRESDB_USER
          value: "n8n"
        - name: DB_POSTGRESDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: DB_POSTGRESDB_PASSWORD
        - name: QUEUE_BULL_REDIS_HOST
          value: "redis-service"
        - name: QUEUE_BULL_REDIS_PORT
          value: "6379"
        - name: N8N_BASIC_AUTH_ACTIVE
          value: "true"
        - name: N8N_BASIC_AUTH_USER
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: N8N_BASIC_AUTH_USER
        - name: N8N_BASIC_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: n8n-secrets
              key: N8N_BASIC_AUTH_PASSWORD
        - name: WEBHOOK_URL
          value: "https://n8n.example.com/"
        volumeMounts:
        - name: n8n-data
          mountPath: /home/node/.n8n
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5678
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5678
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: n8n-data
        persistentVolumeClaim:
          claimName: n8n-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: n8n-pvc
  namespace: n8n
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2
---
apiVersion: v1
kind: Service
metadata:
  name: n8n-service
  namespace: n8n
  labels:
    app.kubernetes.io/name: n8n
    app.kubernetes.io/component: workflow-engine
    app.kubernetes.io/part-of: flow
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5678"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 5678
    targetPort: 5678
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: n8n